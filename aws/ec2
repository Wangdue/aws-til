EC2에 대한 개념과 EC2 Instance의 Server라는 개념 및 가상서버를 생성하기 위한 요소들과 Hands-On으로 진행된다.

1. EC2란 무엇인가?
EC2는 Elastic Compute Cloud의 약자로 C가 2개라서 EC2라고 한다.
EC2는 AWS의 대표적인 서비스로 흔히 On-premise 환경(https://en.wikipedia.org/wiki/On-premises_software)에서 Server와 같은 개념으로 생각하면 된다.

On-Premise환경에서 Server 한대를 구성할 때 시간은 약 짧게는 몇 주 인프라 구성시 1-2달 정도 시간과 비용이 소요된다. 하지만 AWS Cloud 서비스 EC2 Instance를 통해 물리적인 요소 필요없이
자신만의 홈페이지를 단 1분만에 완성할 수 있는 강력한 장점을 가지고 있다.

EC2(Elastic Compute Cloud)를 직역하자면 '탄력있는', '계산하다', '구름'으로 작명가의 내포된 의미로 '언제 어디서든 유연하게 사용할 수 있는 계산기' 즉 간편하게 필요한 용량을 구성할 수 있다는 뜻이다.
AWS EC2 Instance만 있다면 '전기료', '임대공간', '장비료", '유지보수비용' 그 밖 등등 예상치 못하게 들어가는 비용이나 인프라 구성 또는 서버 구성시 들어가는 비용을 상당히 줄일 수 있다.

AWS Cloud의 EC2 Instance 사용시 가격 정책은 다음과 같다.
 - OnDemand           : 약정 없이 사용한 만큼 비용이 지불된다.
 - Reserved Instance  : 1-3년 약정으로 인스턴스를 예약합니다. 하루 8시간 이상 사용시 On-Demand요금보다 75%를 절약할 수 있다. 중간에 RI를 취소할 수 없고 Market Place에서 판매할 수 있다.
 - Spot Instance      : AWS Cloud에서 유휴 Instance를 AWS에서 제시하는 금액이 충족될 시 대여해주는 서비스이며 언제든지 종료될 수 있다.
 
EC2 Instance를 생성한다는 것은 한대의 Server를 생성한 것과 같은데, 생성시 Server의 목적성에 맞도록 Server 기능 베이스를 선택할 수 있다.
AWS Cloud Instance Type(Instance Family)는 다음과 같다.
 - 범용             : 전반적인 퍼포먼스를 기대할 때 사용하기 좋다.
 - 컴퓨팅 최적화     : 동영상이나 머신러닝 목적으로 사용하기 좋다.
 - 스토리지 최적화   : EBS 또는 Instance Store에 빠르게 읽고 쓰기가 가능하다.
 - 가속화           : 그래픽 작업이나 병렬처리 목적
 - 메모리 최적화     : 메모리가 많이 사용되는 Instance에 사용하기 좋다.
 
 2. EBS란 무엇인가?
 EBS는 On-Premise환경의 Disk Drive와 같은 개념으로 컴퓨터 하드디스크와 동일하다고 생각하면 된다. Instance Disk Drive는 2가지로 나뉘어져 있으며 이는 '휘발성'을 갖고있는 instance Store과
 비휘발성으로 네트워크인 EBS(Elastic Block Storage)이다. EBS는 사용중인 Instance와 다른 공간의 Storage를 네트워크로 연결하여 사용할 수 있으며 백업, 스냅샷, 모니터링, 무결성, 가용성, 보안성 등 
 많은 기능을 지원하거나 데이터를 보호할 수 있다.
 필요에 맞게 구입할 수 있고, 필요에 따라 즉시 제거 또는 생성이 가능하다 사용한 만큼 과금 되는 종량제이며, EC2 Instance를 제거해도 EBS는 독립적이기 때문에 데이터가 유지 된다.
 EBS Type은 아래와 같다.
 - HDD
  > 처리량 최적화 HDD        : 저 비용 HDD 볼륨(Disk Drive)는 자주 액세스 하거나 처리량 워크로드를 위해 존재한다. Big Data분석에 유리하며 최대 IOPS는 500IOPS이다. 저장은 500GB - 16TB까지 가능하다
    > 콜드 HDD                : 최저 비용 HDD 볼륨은 액세스 빈도가 낮은워크로드를 위해 존재한다. 간헐적으로 사용할 때 유리하며 최대 IOPS은 250이다. 저장은 500GB - 16TB까지 할 수 있다

- SSD
  > 프로비저닝된 IOPS SSD    : 고 성능 Input or Output 워크로드에 최적화 되어있으며 주로 NoSQL, 관계형 DB IO를 목적으로 많이 사용한다. 최대 IOPS는 64000이다. 저장은 4GB - 16TB까지 가능하다.
  > 범용 SSD                : 다양한 트랜잭션 워크로드와 가격과 성능을 평균화 하였으며 대부분 워크로드에 사용된다. 최대 IOPS는 16000이고, 저장은 1GB - 16TB까지 가능하다.
  
  3. EIP
  EIP는 Elastic Internet Protocol)의 약자로 AWS Cloud에서 관리하고 있는 IP를 서비스에 고정 IP (Static IP)를 부여하는 것과 같다. 이 EIP를 1개 생성할때 유휴 IP일시 월 5불정도의 비용이 발생한다.
  또한 2개 이상의 EIP를 발급할 때 비용발생이 된다. 하지만 1개의 EIP를 생성하고 그 EIP가 EC2 Instance에 고정 IP로 등록되면 무료이다.
  
  4. Security Group
  Security Group은 AWS Cloud 1개 서비스 단위로 설정할 수 있는 방화벽(Firewall)과 동일한 개념으로 Inbound, Outbound 정책에 따라 트래픽이 Allow 또는 Deny될 수 있다.
  일반적으로 방화벽은 IP기반으로 필터링이 가능하나 AWS Cloud는 Security Group과 IP모두 방화벽 필터링 규칙으로 사용될 수 있다. AWS Cloud의 기본은 포괄주의(모든걸 제한하고 특정 n개만 Allow한다)
  로 Defualt Deny이다. Security Group은 서비스별 방화벽이라면 NACL(Network Access Control List)는 VPC의 Subnet기반 방화벽이다 Security Group과 NACL의 가장 큰 차이점은 
  서브넷 기반 방화벽, 서비스 기반 방화벽 / 상태추적 방화벽, 상태추적 하지 않는 방화벽 / IP와 Security Group기반 방화벽, IP기반 방화벽으로 볼 수 있다.
  
  5. AMI
  AMI(Amazon Machine Image)는 AWS Cloud에서 일반적으로 사용하고 있는 OS의 Image를 Snapshot하여 EC2 Instance 생성시에 OS를 선택할 수 있는 Image다.
  AMI는 일반 OS와 동일하며 단지 EC2 Instance 생성 Evnet가 발생시 예약되어 있는 명령어를 통해 사용자에게 OS를 제공할 수 있다.
  OS에 따라 사용할 수 있는 Application이 각각 다르고 AWS Cloud에서 제공하는 AMI는 Linux, Suse, Window, Ubuntu 그 밖 다양한 OS를 선택할 수 있으며 Market Place에서는 수정된 OS라던가 솔루션을 구입할 수 있다.
  
  6. Hands-On으로 직접 EC2 Instance를 생성하고 본인만의 웹 홈페이지를 생성한다.
  
  1. Xshell Download
  # URL_https://www.netsarang.com/ko/
  # Download Ver : Xshell_6 or Xshell_7
  "Xshell"의 용도는 생성된 EC2 Instance의 접근 및 설정을 하기위한 도구 라고 생각하면 된다. EC2 Instance 세션 정보를 저장하여 "Putty"로 매번 Key등록을 할 필요가 없다.
  
  2. AWS Cloud Console Login
  Root 계정으로 login하여 Console에 접근한다. On-Premise 접근시 터미널을 Console이라고 하지만 AWS는 홈페이지 자체가 서비스를 구성할 수 있는 기능이 존재하여 "AWS Cloud Console"이라고 한다.
  MFA설정은 "Multi-factor Authenticaton"으로 직역하면 "다중 인증"으로 기존 ID, Password를 1단계 로그인 인증 방법이라고 한다면 2단계인 Console에 접근하는 유저가 진짜인지 인증하기위한 방법이라고 생각하면 된다.
  # 참고로 설명드리자면 최상위 권한을 갖고있는 AWS Root Account로 로그인하여 서비스 하는 방법보단 Root Account 하위의 IAM User를 생성하여 적절한 권한을 부여하여 사용하는 방법을 추천한다.
  
  3. Create EC2 Instance
  # URL_https://victorydntmd.tistory.com/61
  "EC2" 서비스에서 생성한 가상 서버는 EC2 Instance로 On-Premise 서버와 동일한 기능을 갖는다.
   3-1. AWS Cloud Console > AWS서비스 > EC2(ap-northest-2_서울리전확인)
   3-2. Instance Start
   3-3. AMI선택_Amazon Linux(Free Tier)
        AMI는 (Amazon Machine Image)로 위에서 언급내용 확인 요청, 다시 한번 설명하자면 OS는 기존과 동일한 OS를 사용하지만 EC2 Instance생성시 Batch로 명령어를 실행시킨다.
   3-4. Instance Type_범용인스턴스의 "t2.micro"
        Instnace Type은 위에서 언급내용 확인 요청, 생성 할 EC2 Instance에서 어떤 주요 기능을 수행할 것인가에 따라 선택 가능
   3-5. 인스턴스 세부 정보 구성
         - 인스턴스 개수 : EC2 Instance를 한번에 몇 대로 생성할 것인가에 대한 개수
         - 구매 옵션     : Spot Instance 구매 옵션
         - 네트워크      : VPC에 따로 정리하겠지만 VPC를 선택 함
         - 서브넷        : 실제 EC2 Instance(Server)가 Public 또는 Private 또는 다른 용도에 맞게 사용할 공간을 선택하는 것.
         - 퍼블릭 IP 자동할당 : 외부(Internet)에서 접근 가능한 IP를 부여 함
         - 배치 그룹     : 기존 그룹에 대한 네트워크 확보를 하기위해 미리 설정이 가능
         - 용량 예약     : 특정 가용영역에 미리 EC2 Instance를 위해 용량을 예약 할 수 있음.
         - IAM 역할      : EC2 Instance에 대한 IAM Role을 부여할 수 있다.
         - 종료 방식     : OS 수준의 종료 설정시 결과를 미리 구성합니다.
         - 최대 절전 중지 동작 : 인스턴스를 중지 할 때 Instance Store에 있는 데이터를 Root Volume에 저장한다.
         - 종료 방지 기능 활성화 : 우발적인 종료로부터 보호할 수 있다.
         - 모니터링      : CloudWatch 메트릭을 설정하여 5분단위로 지표수집이 가능하다.
         - 테넌시        : AWS 물리적 HW를 대여하여 사용한다.
         - Elastic Interface : EC2 Instance에 "딥러닝" 기능의 효율적인 퍼포먼스와 비용을 제공할 수 있다.
         - T2/T3 무제한  : 기존 Instance를 생성 후 일정 값의 CPU초과시 자동으로 확장할 수 있는 기능으로 On-Demand 요금 방식을 따른다.
         - 파일 시스템   : EFS(Elastic File System)을 지정한다
         - 네트워크 인터페이스 : EC2 Instance에 네트워크 인터페이스를 설정할 수 있다.
         - 사용자 데이터 : EC2 Instance를 생성하기 전 "Sudo su" "Super User do" 로 실행시키는 방법
   4. 스토리지 추가
      스토리지는 기존 EC2 Instance에 Disk Drive를 추가시킬 수 있으며 Volume Type도 선택할 수 있음
   5. 태그 추가
      Hash 형태로 Key-Value를 통해 Key를 기반으로 원한는 값을 설정한다.
   6. 보안 그룹 구성
      위에서 언급한 Firewall로 보안그룹 & IP 기반 Allow 할 수 있다.
      
  6번까지 설정이 완료되면 7단계 : "인스턴스 시작 검토"를 확인 할 수 있으며 Summary라고 이해하면 됨
  
# 인스턴스 생성시 수정 항목
 - 3단계 인스턴스 세부 정보에서 "퍼블릭 IP 자동할당"을 "활성화"로 설정한 다음 "Next"
 - 6단계 보안 그룹 구성에서 새 보안그룹을 생성한다. "규칙 추가" 후 유형 "HTTP"를 선택 한 후 소스를 "내 IP"선택 
 
# Xshell 접속방법
URL_https://zzdd1558.tistory.com/202

# EC2 Instance 서버에 Web Apache를 설치하여 Local환경에서 자신 소유의 Homepage를 띄워본다.
AMI가 "Amazon Linux2"일 때 EC2 Instance에 접속하여 다음과 같이 설정한다
1. AWS Cloud Console
1-1. EC2 Instance에 Xshell로 접속
2. EC2 Instance 터미널
2-1. sudo su
2-2. yum install httpd -y
2-3. cd /var/www/html
2-4. vi index.html
 2-4-1. "i" 를 클릭 후 자신의 이름을 작성
 2-4-2. "esc" 클릭
 2-4-3. ":wq" 그대로 입력 후 엔터
2-5. service httpd start (httpd Deamon 활성화)
2-6. service httpd status (Active일때 httpd 데몬 동작 확인)
2-7. EC2 Instance의 "퍼블릭 DNS(IPv4)"의 주소를 복사하여 Chrome 브라우저 URL창에 입력 후 자신의 홈페이지를 확인할 수 있다.





